name: divvly-production

on:
  push:
    branches:
      - main

jobs:
  Test:
    environment: Staging
    env:
      NEXT_PUBLIC_apiKey: ${{ secrets.NEXT_PUBLIC_apiKey }}
      NEXT_PUBLIC_appId: ${{ secrets.NEXT_PUBLIC_appId }}
      NEXT_PUBLIC_messagingSenderId: ${{ secrets.NEXT_PUBLIC_messagingSenderId }}
      NEXT_PUBLIC_storageBucket: ${{ secrets.NEXT_PUBLIC_storageBucket }}
      NEXT_PUBLIC_projectId: ${{ secrets.NEXT_PUBLIC_projectId }}
      NEXT_PUBLIC_authDomain: ${{ secrets.NEXT_PUBLIC_authDomain }}
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
      NEXT_PUBLIC_API_DOMAIN: ${{ secrets.NEXT_PUBLIC_API_DOMAIN }}
      NEXT_PUBLIC_LOGROCKET_APP_ID: ${{secrets.NEXT_PUBLIC_LOGROCKET_APP_ID}}
      NEXT_PUBLIC_TRACKING_SERVICE: ${{ secrets.NEXT_PUBLIC_TRACKING_SERVICE }}
      NEXT_PUBLIC_APP_ENV: staging
    if: true
    runs-on: [self-hosted, staging]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "19.x"
      - name: cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        working-directory: ./app
        run: npm install
      - name: Run Application Tests
        working-directory: ./app
        run: npm run test
  Deploy:
    needs: Test
    runs-on: [self-hosted, production]
    environment: Staging
    env:
      NEXT_PUBLIC_apiKey: ${{ secrets.NEXT_PUBLIC_apiKey }}
      NEXT_PUBLIC_appId: ${{ secrets.NEXT_PUBLIC_appId }}
      NEXT_PUBLIC_messagingSenderId: ${{ secrets.NEXT_PUBLIC_messagingSenderId }}
      NEXT_PUBLIC_storageBucket: ${{ secrets.NEXT_PUBLIC_storageBucket }}
      NEXT_PUBLIC_projectId: ${{ secrets.NEXT_PUBLIC_projectId }}
      NEXT_PUBLIC_authDomain: ${{ secrets.NEXT_PUBLIC_authDomain }}
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
      NEXT_PUBLIC_API_DOMAIN: ${{ secrets.NEXT_PUBLIC_API_DOMAIN }}
      NEXT_PUBLIC_LOGROCKET_APP_ID: ${{secrets.NEXT_PUBLIC_LOGROCKET_APP_ID}}
      NEXT_PUBLIC_TRACKING_SERVICE: ${{ secrets.NEXT_PUBLIC_TRACKING_SERVICE }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: sudo npm install --global vercel@latest
      - name: Install Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "19.x"
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
