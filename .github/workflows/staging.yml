name: divvly-staging

on:
  push:
    branches:
      - WAK-Sprint-2023-*

jobs:
  Test:
    environment: Staging
    env:
      NEXT_PUBLIC_apiKey: ${{ secrets.NEXT_PUBLIC_apiKey }}
      NEXT_PUBLIC_appId: ${{ secrets.NEXT_PUBLIC_appId }}
      NEXT_PUBLIC_messagingSenderId: ${{ secrets.NEXT_PUBLIC_messagingSenderId }}
      NEXT_PUBLIC_storageBucket: ${{ secrets.NEXT_PUBLIC_storageBucket }}
      NEXT_PUBLIC_projectId: ${{ secrets.NEXT_PUBLIC_projectId }}
      NEXT_PUBLIC_authDomain: ${{ secrets.NEXT_PUBLIC_authDomain }}
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
      NEXT_PUBLIC_API_DOMAIN: ${{ secrets.NEXT_PUBLIC_API_DOMAIN }}
      NEXT_PUBLIC_LOGROCKET_APP_ID: ${{secrets.NEXT_PUBLIC_LOGROCKET_APP_ID}}
      NEXT_PUBLIC_TRACKING_SERVICE: ${{ secrets.NEXT_PUBLIC_TRACKING_SERVICE }}
      NEXT_PUBLIC_APP_ENV: staging
    if: true
    runs-on: [self-hosted, staging]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "19.x"
      - name: cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        working-directory: ./app
        run: npm install
      - name: Run Application Tests
        working-directory: ./app
        run: npm run test
  Deploy:
    needs: Test
    runs-on: [self-hosted, staging]
    environment: Staging
    env:
      NEXT_PUBLIC_apiKey: ${{ secrets.NEXT_PUBLIC_apiKey }}
      NEXT_PUBLIC_appId: ${{ secrets.NEXT_PUBLIC_appId }}
      NEXT_PUBLIC_messagingSenderId: ${{ secrets.NEXT_PUBLIC_messagingSenderId }}
      NEXT_PUBLIC_storageBucket: ${{ secrets.NEXT_PUBLIC_storageBucket }}
      NEXT_PUBLIC_projectId: ${{ secrets.NEXT_PUBLIC_projectId }}
      NEXT_PUBLIC_authDomain: ${{ secrets.NEXT_PUBLIC_authDomain }}
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
      NEXT_PUBLIC_API_DOMAIN: ${{ secrets.NEXT_PUBLIC_API_DOMAIN }}
      NEXT_PUBLIC_LOGROCKET_APP_ID: ${{secrets.NEXT_PUBLIC_LOGROCKET_APP_ID}}
      NEXT_PUBLIC_TRACKING_SERVICE: ${{ secrets.NEXT_PUBLIC_TRACKING_SERVICE }}
      NEXT_PUBLIC_APP_ENV: staging
    steps:
      - name: Make script executable
        run: chmod +x ./scripts/cleanupStaging.sh

      - name: CleanupStaging
        run: sudo ./scripts/cleanupStaging.sh

      - name: Build the docker image
        working-directory: ./app
        run: |
          docker build -t divvly-cp-staging \
          --build-arg NEXT_PUBLIC_apiKey=$NEXT_PUBLIC_apiKey \
          --build-arg NEXT_PUBLIC_appId=$NEXT_PUBLIC_appId \
          --build-arg NEXT_PUBLIC_messagingSenderId=$NEXT_PUBLIC_messagingSenderId \
          --build-arg NEXT_PUBLIC_storageBucket=$NEXT_PUBLIC_storageBucket \
          --build-arg NEXT_PUBLIC_projectId=$NEXT_PUBLIC_projectId \
          --build-arg NEXT_PUBLIC_authDomain=$NEXT_PUBLIC_authDomain \
          --build-arg NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=$NEXT_PUBLIC_GOOGLE_MAPS_API_KEY \
          --build-arg NEXT_PUBLIC_API_DOMAIN=$NEXT_PUBLIC_API_DOMAIN \
          --build-arg NEXT_PUBLIC_LOGROCKET_APP_ID=$NEXT_PUBLIC_LOGROCKET_APP_ID \
          --build-arg NEXT_PUBLIC_TRACKING_SERVICE=$NEXT_PUBLIC_TRACKING_SERVICE \
          --build-arg NEXT_PUBLIC_APP_ENV=staging \
          .
      - name: Start the docker container
        run: docker run -dp 3001:3000 divvly-cp-staging
